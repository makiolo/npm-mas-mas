- cryptopp:
    <<: *thirdparty_defaults
    version: 0.0.0.0
    mode: dr
    version_manager: git
    post_install:
        - ./*.h include
        - ./*.a lib
    cmake_target: null
    mode: dr
    source: https://github.com/weidai11/cryptopp.git
    branch: -b CRYPTOPP_5_6_5
    unittest:
        |
            // https://www.cryptopp.com/wiki/ChannelSwitch
            #include <iostream>
            #include <cstring>
            #include <cryptopp/channels.h> 
            #include <cryptopp/filters.h> 
            #include <cryptopp/sha.h> 
            #include <cryptopp/hex.h>

            int main(int argc, char *argv[])
            {
                std::string message = "Now is the time for all good men to come to the aide of their country";

                // Allow user to override default message from command line arg.
                if(argc == 2 && argv[1] != NULL) 
                    message = std::string(argv[1]);

                // Set hash variables
                std::string s1, s2, s3, s4;
                CryptoPP::SHA1 sha1; CryptoPP::SHA224 sha224; CryptoPP::SHA256 sha256; CryptoPP::SHA512 sha512;

                // Run hash functions
                CryptoPP::HashFilter f1(sha1, new CryptoPP::HexEncoder(new CryptoPP::StringSink(s1)));
                CryptoPP::HashFilter f2(sha224, new CryptoPP::HexEncoder(new CryptoPP::StringSink(s2)));
                CryptoPP::HashFilter f3(sha256, new CryptoPP::HexEncoder(new CryptoPP::StringSink(s3)));
                CryptoPP::HashFilter f4(sha512, new CryptoPP::HexEncoder(new CryptoPP::StringSink(s4)));

                // Set route to default
                CryptoPP::ChannelSwitch cs;
                cs.AddDefaultRoute(f1);
                cs.AddDefaultRoute(f2);
                cs.AddDefaultRoute(f3);
                cs.AddDefaultRoute(f4);

                CryptoPP::StringSource ss(message, true /*pumpAll*/, new CryptoPP::Redirector(cs));

                std::cout << "Message: " << message << std::endl;
                std::cout << "SHA-1: " << s1 << std::endl;
                std::cout << "SHA-224: " << s2 << std::endl;
                std::cout << "SHA-256: " << s3 << std::endl;
                std::cout << "SHA-512: " << s4 << std::endl;
            }
    cmake_definitions:
        - BUILD_SHARED=OFF
        - BUILD_SHARED_LIBS=OFF
        - BUILD_STATIC=ON
        - BUILD_TESTING=OFF
    targets:
        - cryptopp:
            info:
                <<: *library_static_exact
            extra:
                default:
                    definitions:
                        - -DCRYPTOPP_INIT_PRIORITY=1


